{"version":3,"sources":["JSONEditor.class.js"],"names":["Object","size","obj","key","hasOwnProperty","JSONEditor","$wrap","usePreview","Util","this","removeBR","element","find","replaceWith","stringLimiter","limit","str","text","length","substring","removeSpace","replace","Context","getParent","tree","self","parent","$el","active","template","node","o","role","roles","$","createContext","append","contextEvent","$nav","on","e","stopPropagation","typeItem","attr","context","off","insertItem","duplicateItem","removeItem","$item","button","css","left","position","outerWidth","top","removeAttr","$index","$preview","util","contextTree","init","createRoot","prepend","addClass","updatePreview","type","selectButtons","$li","children","updateCount","itemCount","updateNumber","$items","each","k","inputCheckEvent","$strong","$inputs","buttonsEvent","$buttons","$node","closest","filter","toggleClass","dragEvent","adjustment","beforeItem","sortable","itemSelector","handle","group","pullPlaceholder","onDrop","container","_super","el","onDragStart","offset","pointer","rootGroup","onDrag","isValidTarget","$ul","remove","$active","data","complete","value","$key","$value","parseInt","$target","$copy","clone","insertAfter","andSelf","$parentItem","items","getData","index","Array","isArray","$root","$lis","getSpace","$this","$parent","push","json","space","JSON","stringify","prototype"],"mappings":"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","file":"JSONEditor.class.js","sourcesContent":["Object.size = function(obj) {\n\tvar size = 0, key;\n\tfor (key in obj) {\n\t\tif (obj.hasOwnProperty(key)) size++;\n\t}\n\treturn size;\n};\n\n\n/**\n * JSON Editor Class\n *\n * author : Redgoose\n * website : http://redgoose.me\n * @Param {Array} $wrap : json editor 껍데기 엘리먼트\n * @Param {Boolean} usePreview : 프리뷰 창을 사용할건지에 대한 값\n * @return void\n */\nvar JSONEditor = function($wrap, usePreview)\n{\n\tvar self = this;\n\n\tself.$wrap = $wrap;\n\tself.$index = null;\n\tself.$preview = null;\n\n\tvar util = new Util();\n\tvar context = new Context(this, this.contextTree);\n\n\n\t/**\n\t * Util Class\n\t */\n\tfunction Util()\n\t{\n\t\t/**\n\t\t * remove <br/>\n\t\t * <br/> 엘리먼트를 공백으로 변환시켜줍니다.\n\t\t *\n\t\t * @param {Object} element : 컨테이너 엘리먼트\n\t\t**/\n\t\tthis.removeBR = function (element)\n\t\t{\n\t\t\telement.find('br').replaceWith(' ');\n\t\t};\n\n\t\t/**\n\t\t * string limiter\n\t\t * 글자길이를 체크하여 지정된 수치보다 높으면 잘라버립니다.\n\t\t *\n\t\t * @param {Object} element : 글이 들어있는 엘리먼트\n\t\t * @param {Number} limit : 글자 갯수제한\n\t\t**/\n\t\tthis.stringLimiter = function(element, limit)\n\t\t{\n\t\t\tvar str = element.text();\n\t\t\tif (str.length > limit)\n\t\t\t{\n\t\t\t\telement.text(str.substring(0, limit));\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * remove space\n\t\t * 공백을 없애줍니다.\n\t\t *\n\t\t * @param {Object} element : 내용이 적혀있는 엘리먼트입니다.\n\t\t**/\n\t\tthis.removeSpace = function(element)\n\t\t{\n\t\t\telement.text(element.text().replace(/\\s+/g, ''));\n\t\t}\n\t}\n\n\n\t/**\n\t * Context class\n\t * 기능을 실행하는 context 메뉴\n\t *\n\t * @param {JSONEditor} getParent\n\t * @param {Array} tree\n\t */\n\tfunction Context(getParent, tree)\n\t{\n\t\tvar self = this;\n\t\tvar parent = getParent;\n\n\t\tself.$el = null;\n\t\tself.active = null;\n\n\t\t/**\n\t\t * context template\n\t\t *\n\t\t * @param {Object} obj\n\t\t * @return {Object}\n\t\t */\n\t\tvar template = function(obj)\n\t\t{\n\t\t\tfunction node(obj)\n\t\t\t{\n\t\t\t\tvar str = '<ul>';\n\t\t\t\tfor (var o in obj)\n\t\t\t\t{\n\t\t\t\t\tstr += '<li role=\"' + obj[o].role + '\">';\n\t\t\t\t\tif (obj[o].roles)\n\t\t\t\t\t{\n\t\t\t\t\t\tstr += '<div>';\n\t\t\t\t\t\tstr += node(obj[o].roles);\n\t\t\t\t\t\tstr += '</div>';\n\t\t\t\t\t}\n\t\t\t\t\tstr += '<button type=\"button\">' + obj[o].role + '</button>';\n\t\t\t\t\tstr += '</li>';\n\t\t\t\t}\n\t\t\t\tstr += '</ul>';\n\t\t\t\treturn str;\n\t\t\t}\n\t\t\tvar str = '<nav class=\"context\">';\n\t\t\tstr += node(obj);\n\t\t\tstr += '</nav>';\n\t\t\treturn $(str);\n\t\t};\n\n\t\t/**\n\t\t * create context\n\t\t */\n\t\tvar createContext = function()\n\t\t{\n\t\t\tself.$el = template(tree);\n\t\t\tparent.$wrap.append(self.$el);\n\t\t};\n\n\t\t/**\n\t\t * context event\n\t\t *\n\t\t * @param {Object} $nav\n\t\t */\n\t\tvar contextEvent = function($nav)\n\t\t{\n\t\t\t$nav.find('li').on('click', function(e){\n\t\t\t\te.stopPropagation();\n\t\t\t});\n\n\t\t\t$nav.find('li[role=Type] li').on('click', function(){\n\t\t\t\tparent.typeItem(self.active, $(this).attr('role'));\n\t\t\t\tcontext.off();\n\t\t\t});\n\n\t\t\t$nav.find('li[role=Insert] li').on('click', function(){\n\t\t\t\tparent.insertItem(self.active, $(this).attr('role'), null);\n\t\t\t\tcontext.off();\n\t\t\t});\n\n\t\t\t$nav.find('li[role=Duplicate]').on('click', function(){\n\t\t\t\tparent.duplicateItem(self.active);\n\t\t\t\tcontext.off();\n\t\t\t});\n\n\t\t\t$nav.find('li[role=Remove]').on('click', function(){\n\t\t\t\tparent.removeItem(self.active);\n\t\t\t\tcontext.off();\n\t\t\t});\n\t\t};\n\n\n\t\t/**\n\t\t * context open\n\t\t *\n\t\t * @param {Object} $item\n\t\t * @param {Object} button\n\t\t */\n\t\tthis.on = function($item, button)\n\t\t{\n\t\t\tself.active = $item;\n\t\t\tself.$el\n\t\t\t\t.attr('type', $item.attr('type'))\n\t\t\t\t.css({\n\t\t\t\t\tleft : button.position().left + button.outerWidth()\n\t\t\t\t\t,top : button.position().top - 3\n\t\t\t\t})\n\t\t\t;\n\t\t\tif ($item.attr('loc') == 'root')\n\t\t\t{\n\t\t\t\tself.$el.attr('loc', $item.attr('loc'))\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tself.$el.removeAttr('loc');\n\t\t\t}\n\t\t\t$('html').on('click', function(){\n\t\t\t\tself.off();\n\t\t\t});\n\t\t};\n\n\t\t/**\n\t\t * context close\n\t\t */\n\t\tthis.off = function()\n\t\t{\n\t\t\tself.active = null;\n\t\t\tself.$el.removeAttr('type');\n\t\t\t$('html').off('click');\n\t\t};\n\n\n\t\t// act\n\t\tcreateContext();\n\t\tcontextEvent(self.$el);\n\t}\n\n\n\t/**\n\t * init\n\t */\n\tvar init = function()\n\t{\n\t\tself.$index = $('<div class=\"index\" />');\n\t\tself.$index.append(createRoot());\n\t\tself.$wrap.prepend(self.$index);\n\n\t\tself.$preview = $('<pre class=\"preview\" />');\n\t\tself.$wrap.append(self.$preview);\n\t\tself.$wrap.addClass('preview');\n\n\t\tupdatePreview();\n\t};\n\n\t/**\n\t * node template\n\t *\n\t * @param {String} type\n\t * @return {Object}\n\t */\n\tvar template = function(type)\n\t{\n\t\tvar str = '<li type=\"' + type + '\" class=\"on\">\\n';\n\t\tstr += '<dl>';\n\t\tstr += '<dt>';\n\t\tstr += '<button type=\"button\" role=\"move\">move</button>';\n\t\tstr += '<button type=\"button\" role=\"control\">control</button>';\n\t\tstr += '<em class=\"no\">0</em>';\n\t\tstr += '<button type=\"button\" role=\"toggle\">toggle</button>';\n\t\tstr += '<strong contenteditable=\"true\" spellcheck=\"false\" data-ph=\"' + type + '\"></strong>';\n\t\tstr += '<span class=\"type\"></span>';\n\t\tstr += '<em class=\"count\">0</em>';\n\t\tstr += '</dt>';\n\t\tstr += '<dd>';\n\t\tstr += '<span contenteditable=\"true\" spellcheck=\"false\"></span>';\n\t\tstr += '</dd>';\n\t\tstr += '</dl>';\n\t\tstr += '<ul></ul>';\n\t\tstr += '</li>';\n\t\treturn $(str);\n\t};\n\n\t/**\n\t * 버튼을 선택해주는 엘리먼트\n\t *\n\t * @param {Object} $li : 버튼을 선택하는 li엘리먼트\n\t * @return {Object} : 버튼 엘리먼트\n\t */\n\tvar selectButtons = function($li)\n\t{\n\t\treturn $li.children('dl').children('dt').children('button');\n\t};\n\n\t/**\n\t * Object나 Array 카운트 갱신\n\t *\n\t * @param {Object} $li : 카운트 갱신할 li 엘리먼트\n\t */\n\tvar updateCount = function($li)\n\t{\n\t\tvar itemCount = $li.find('> ul > li').length;\n\t\t$li.find('> dl em.count').text(itemCount);\n\t};\n\n\t/**\n\t * 배열번호에 사용되는 순서에 대한 번호갱신\n\t *\n\t * @param {Object} $items\n\t */\n\tvar updateNumber = function($items)\n\t{\n\t\t$items.each(function(k){\n\t\t\t$(this).find('> dl > dt > em.no').text(k);\n\t\t});\n\t};\n\n\t/**\n\t * key값 텍스트 인풋에서 포커스가 떨어졌을때 문자 검사를 해주는 역할을 한다.\n\t *\n\t * @param {Object} $item\n\t */\n\tvar inputCheckEvent = function($item)\n\t{\n\t\tvar $strong = $item.find('> dl > dt > strong');\n\t\tvar $inputs = $item.find('> dl > dt > strong, > dl > dd > span');\n\n\t\t$strong.on('blur', function(){\n\t\t\tutil.removeBR($(this));\n\t\t\tutil.removeSpace($(this));\n\t\t\tutil.stringLimiter($(this), 20);\n\t\t});\n\t\t// preview update\n\t\t$inputs.on('blur', function(){\n\t\t\tupdatePreview();\n\t\t});\n\t};\n\n\t/**\n\t * Context와 접었더 펴는 버튼 이벤트를 만들어준다.\n\t *\n\t * @param {Object} $buttons\n\t */\n\tvar buttonsEvent = function($buttons)\n\t{\n\t\tvar $node = $buttons.closest('li');\n\n\t\t// control\n\t\t$buttons.filter('[role=control]').on('click', function(e){\n\t\t\te.stopPropagation();\n\t\t\tcontext.off($node);\n\t\t\tcontext.on($node, $(this));\n\t\t});\n\n\t\t// toggle\n\t\t$buttons.filter('[role=toggle]').on('click', function(e){\n\t\t\t$node.toggleClass('on')\n\t\t});\n\t};\n\n\t/**\n\t * drag event\n\t *\n\t * @param {Object} $item\n\t */\n\tvar dragEvent = function($item)\n\t{\n\t\t// drag and drop event\n\t\tvar adjustment, beforeItem;\n\t\t$item.children('ul').sortable({\n\t\t\titemSelector : 'li'\n\t\t\t,handle : 'button[role=move]'\n\t\t\t,group : 'index'\n\t\t\t,pullPlaceholder: true\n\n\t\t\t,onDrop : function($item, container, _super) {\n\t\t\t\tupdateCount(beforeItem.parent());\n\t\t\t\tupdateCount(container.el.parent());\n\n\t\t\t\tupdateNumber(beforeItem.children());\n\t\t\t\tupdateNumber(container.el.children());\n\n\t\t\t\tupdatePreview();\n\n\t\t\t\tbeforeItem = adjustment = null;\n\t\t\t\t_super($item, container);\n\t\t\t}\n\t\t\t,onDragStart : function($item, container, _super) {\n\t\t\t\tvar offset = $item.offset();\n\t\t\t\tvar pointer = container.rootGroup.pointer;\n\n\t\t\t\tadjustment = {\n\t\t\t\t\tleft: pointer.left - offset.left\n\t\t\t\t\t,top: pointer.top - offset.top\n\t\t\t\t};\n\t\t\t\tbeforeItem = container.el;\n\t\t\t\t_super($item, container);\n\t\t\t}\n\t\t\t,onDrag : function($el, position) {\n\t\t\t\t$el.css({\n\t\t\t\t\tleft: position.left - adjustment.left\n\t\t\t\t\t,top: position.top - adjustment.top\n\t\t\t\t});\n\t\t\t}\n\t\t\t,isValidTarget : function ($el, container) {\n\t\t\t\treturn (container.el.parent().attr('type') != 'String');\n\t\t\t}\n\t\t});\n\t};\n\n\t/**\n\t * Create root node\n\t *\n\t * @return {Object}\n\t */\n\tvar createRoot = function()\n\t{\n\t\tvar $ul = $('<ul/>');\n\t\tvar $li = template('Object');\n\n\t\t$li.attr('loc', 'root');\n\t\t$li.find('[contenteditable]').attr('contenteditable', 'false');\n\t\t$li.find('[role=move]').remove();\n\n\t\t$ul.append($li);\n\n\t\tbuttonsEvent(selectButtons($li));\n\t\tdragEvent($li);\n\n\t\treturn $ul;\n\t};\n\n\t/**\n\t * Updata preview\n\t */\n\tvar updatePreview = function()\n\t{\n\t\tself.$preview.text(self.export(5));\n\t};\n\n\n\t/**\n\t * Insert item\n\t * 아이템을 삽입해준다.\n\t *\n\t * @param {Object} $active : 선택된 아이템\n\t * @param {String} type : 추가할 아이템 타입 (String, Object, Array)\n\t * @param {Object} data : 추가할 아이템의 데이터\n\t * @param {Function} complete\n\t */\n\tthis.insertItem = function($active, type, data, complete)\n\t{\n\t\tvar $ul = $active.children('ul');\n\t\tvar $item = template(type);\n\n\t\t$item.find('em.no').text($ul.children('li').length);\n\n\t\t// push data\n\t\tif (data)\n\t\t{\n\t\t\t$item.find('dt strong').text(data.key);\n\t\t\t$item.find('dd span').text(data.value);\n\t\t}\n\n\t\tbuttonsEvent(selectButtons($item));\n\t\tinputCheckEvent($item);\n\t\t$active.addClass('on').children('ul').append($item);\n\t\tupdateCount($active);\n\n\t\tif (complete)\n\t\t{\n\t\t\tcomplete($item);\n\t\t}\n\t};\n\n\t/**\n\t * Change type\n\t * 아이템의 타입을 바꿔준다.\n\t *\n\t * @param {Object} $active : 선택된 아이템\n\t * @param {String} type : 바꾸고싶은 타입 (String, Object, Array)\n\t */\n\tthis.typeItem = function($active, type)\n\t{\n\t\tvar $key = $active.find('> dl > dt > strong');\n\t\tvar $value = $active.find('> dl > dd > span');\n\n\t\t$active.attr('type', type);\n\t\t$key.attr('data-ph', type);\n\n\t\tswitch(type)\n\t\t{\n\t\t\tcase \"Number\":\n\t\t\t\tvar value = parseInt($value.text());\n\t\t\t\tvalue = (!value) ? 0 : value;\n\t\t\t\t$value.text(value);\n\t\t\t\tbreak;\n\t\t\tcase \"Boolean\":\n\t\t\t\t$value.text(!!($value.text()));\n\t\t\t\tbreak;\n\t\t}\n\n\t\tupdatePreview();\n\t};\n\n\t/**\n\t * Duplicate item\n\t * 아이템 복제\n\t *\n\t * @param {Object} $target : 복사할 아이템\n\t */\n\tthis.duplicateItem = function($target)\n\t{\n\t\tvar $copy = $target.clone().insertAfter($target).find('li').andSelf();\n\t\t$copy.each(function(){\n\t\t\tbuttonsEvent(selectButtons($(this)));\n\t\t\tinputCheckEvent($(this));\n\t\t});\n\t\tupdateCount($target.parent().parent());\n\t\tupdateNumber($target.parent().children());\n\t\tupdatePreview();\n\t};\n\n\t/**\n\t * Remove item\n\t * 아이템 삭제\n\t *\n\t * @param {Object} $target\n\t */\n\tthis.removeItem = function($target)\n\t{\n\t\tvar $parentItem = $target.parent().parent();\n\t\t$target.remove();\n\t\tupdateCount($parentItem);\n\t\tupdatePreview();\n\t};\n\n\t/**\n\t * Import JSON\n\t * 에디터로 json 데이터 가져오기(add)\n\t *\n\t * @param {Object} data\n\t */\n\tthis.import = function(data)\n\t{\n\t\tfunction items(getData, $item)\n\t\t{\n\t\t\t$.each(getData, function(index, value){\n\t\t\t\tvar\n\t\t\t\t\tdata = {key : index, value : value}\n\t\t\t\t\t,type = null\n\t\t\t\t;\n\n\t\t\t\tif (typeof value === 'string')\n\t\t\t\t{\n\t\t\t\t\ttype = 'String';\n\t\t\t\t}\n\t\t\t\telse if (typeof value === 'object')\n\t\t\t\t{\n\t\t\t\t\ttype = (Array.isArray(value)) ? 'Array' : 'Object';\n\t\t\t\t}\n\t\t\t\telse if (typeof value === 'number')\n\t\t\t\t{\n\t\t\t\t\ttype = 'Number';\n\t\t\t\t}\n\t\t\t\telse if (typeof value === 'boolean')\n\t\t\t\t{\n\t\t\t\t\ttype = 'Boolean';\n\t\t\t\t}\n\n\t\t\t\tself.insertItem($item, type, data, function($item){\n\t\t\t\t\tif (type !== 'String' && Object.size(value) > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\titems(value, $item);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\titems(data, self.$index.find('[loc=root]'));\n\t\tupdatePreview();\n\t};\n\n\t/**\n\t * Replace JSON\n\t * 에디터로 json 데이터 가져오기(replace)\n\t *\n\t * @param {Object} data\n\t */\n\tthis.replace = function(data)\n\t{\n\t\tvar $root = this.$index.find('[loc=root]');\n\t\tvar $lis = $root.find('> ul > li');\n\n\t\tthis.removeItem($lis);\n\t\tif (Array.isArray(data))\n\t\t{\n\t\t\tthis.typeItem($root, 'Array');\n\t\t}\n\t\tthis.import(data);\n\t};\n\n\t/**\n\t * 아이템 트리의 내용을 문자형태로 내보내기\n\t *\n\t * @param {Number|Boolean} getSpace 숫자 : 스페이스 수, true : 탭, false : 0\n\t * @return {String} : 문자로 변형된 json데이터\n\t */\n\tthis.export = function(getSpace)\n\t{\n\t\tfunction items($li, obj)\n\t\t{\n\t\t\tvar $lis = $li.children('ul').children('li');\n\t\t\tif ($lis.length)\n\t\t\t{\n\t\t\t\t$lis.each(function(){\n\t\t\t\t\tvar\n\t\t\t\t\t\t$this = $(this),\n\t\t\t\t\t\tkey = $this.find('> dl > dt > strong').text(),\n\t\t\t\t\t\tvalue = $this.find('> dl > dd > span').text(),\n\t\t\t\t\t\t$parent = $this.parent().parent()\n\t\t\t\t\t;\n\n\t\t\t\t\tif (($parent.attr('type') !== 'Array') && !key)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\tswitch($this.attr('type'))\n\t\t\t\t\t{\n\t\t\t\t\t\tcase 'String':\n\t\t\t\t\t\t\tif ($li.attr('type') == 'Array')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tobj.push(value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tobj[key] = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\t\tif ($li.attr('type') == 'Array')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tobj.push(items($this, []));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tobj[key] = items($this, []);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\t\tif ($li.attr('type') == 'Array')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tobj.push(items($this, {}));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tobj[key] = items($this, {});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Number':\n\t\t\t\t\t\t\tvalue = parseInt(value);\n\t\t\t\t\t\t\tif ($li.attr('type') == 'Array')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tobj.push(value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tobj[key] = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Boolean':\n\t\t\t\t\t\t\tvalue = !!(value == 'true' || value == 1);\n\t\t\t\t\t\t\tif ($li.attr('type') == 'Array')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tobj.push(value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tobj[key] = !!(value == 'true' || value == 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn obj;\n\t\t}\n\n\t\tvar $root = self.$index.find('[loc=root]');\n\t\tvar json = items(\n\t\t\t$root\n\t\t\t,($root.attr('type') == 'Array') ? [] : {}\n\t\t);\n\t\tvar space = ((typeof getSpace === 'boolean') && getSpace == true) ? '\\t' : 0;\n\t\tspace = (typeof getSpace === 'number') ? getSpace : space;\n\t\treturn JSON.stringify(json, null, space);\n\t};\n\n\n\t// act\n\tinit();\n\n};\n\n\n\n// context tree data\nJSONEditor.prototype.contextTree = [\n\t{\n\t\trole : 'Type'\n\t\t,roles : [\n\t\t\t{role:'Object'}\n\t\t\t,{role : 'Array'}\n\t\t\t,{role : 'String'}\n\t\t\t,{role : 'Number'}\n\t\t\t,{role : 'Boolean'}\n\t\t]\n\t}\n\t,{\n\t\trole : 'Insert'\n\t\t,roles : [\n\t\t\t{role : 'Object'}\n\t\t\t,{role : 'Array'}\n\t\t\t,{role : 'String'}\n\t\t\t,{role : 'Number'}\n\t\t\t,{role : 'Boolean'}\n\t\t]\n\t}\n\t,{role : 'Duplicate'}\n\t,{role : 'Remove'}\n];\n"],"sourceRoot":"/source/"}